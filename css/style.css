/* style.css - עם צבעים מעודכנים לילדי גן /
:root {
--motion-color: #66D2FF; / כחול-תכלת בהיר /
--triggering-color: #FFE866; / צהוב בננה רך /
--looks-color: #D295F6; / סגול לבנדר רך /
--sound-color: #7ED957; / ירוק תפוח בהיר /
--control-color: #FFBD67; / כתום אפרסק /
--end-color: #FF6B6B; / אדום קורל רך */
}

body {
font-family: Arial, sans-serif;
margin: 0;
padding: 0;
background-color: #f0f4ff;
direction: ltr; /* Make sure direction is LTR */
}

.container {
display: flex;
flex-direction: column;
height: 100vh;
}

header {
background-color: #fff;
padding: 10px 20px;
display: flex;
justify-content: space-between;
align-items: center;
border-bottom: 1px solid #e0e0e0;
}

main {
display: flex;
flex-direction: column;
flex-grow: 1;
}

.stage-container {
flex: 1;
display: flex;
justify-content: center;
align-items: center;
padding: 10px;
}

#stage {
flex: 0 0 auto;
width: 550px;
height: 450px;
background-color: #f5f5f5;
border: 1px solid #e0e0e0;
border-radius: 10px;
position: relative;
gap: 1px;
box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

#stage::before {
content: '';
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
pointer-events: none;
background: none;
}

#stage.show-grid::before {
background: none;
}

#stage.show-grid {
background-image:
linear-gradient(to right, lightgrey 1px, transparent 1px),
linear-gradient(to bottom, lightgrey 1px, transparent 1px);
background-size: 56px 46px; /* Set the size of the grid lines /
background-position: top left; / Align the grid to the top left */
}

#character {
width: 100px;
height: 100px;
position: absolute;
object-fit: contain;
cursor: grab;
transition: all 0.1s ease-out;
top: 50%;
left: 50%;
transform: translate(-50%, -50%);
}

.palette-and-programming {
display: flex;
flex-direction: column;
flex: 1;
}

#block-palette {
background-color: #f0f0f0; /* Gray background as requested /
border: 1px solid #e0e0e0;
margin: 10px;
padding: 10px;
border-radius: 10px;
height: 105px; / Fixed height of 114px as requested /
display: flex;
flex-direction: row;
align-items: stretch;
overflow: hidden; / Prevent content from overflowing */
}

.category-tabs {
display: flex;
flex-direction: row;
flex-wrap: wrap;
margin-bottom: 0;
height: 100%;
align-content: flex-start;
background-color: #f0f0f0; /* Gray background behind tabs */
}

.category-tab {
border: none;
padding: 0;
margin-left: 5px;
margin-bottom: 5px;
border-radius: 10px;
cursor: pointer;
font-size: 16px;
color: #000000;
width: 80px;
height: 80px;
display: flex;
justify-content: center;
align-items: center;
box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
border-bottom: 2px solid rgba(0, 0, 0, 0.1);
}

.category-tab img {
max-width: 60%;
max-height: 60%;
pointer-events: none;

}

.category-tab.active {
/* Add any active state styling here if needed */
}

.category-tab:focus {
outline: none; /* Remove default focus outline /
border-color: #4a90e2; / Example: Add a custom border on focus /
box-shadow: 0 0 5px #4a90e2; / Example: Add a custom shadow on focus */
}

.category-tab:active {
transform: scale(0.95); /* Example: Slightly scale down on click /
box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3); / Adjust shadow for click effect */
}

.category-tab svg {
max-width: 60%;
max-height: 60%;
pointer-events: none;
}

.category-tab span {
display: none; /* Hide text labels by default */
}

.category-tab img, .category-tab svg {
display: block;
margin: 0 auto;
}

.category-tab:not(:hover) span {
/* Keep text hidden when not hovering */
}

.category-tab:hover span {
display: block; /* Show text on hover */
font-size: 12px;
margin-top: 5px;
}

.category-tab:hover img, .category-tab:hover svg {
/* Optionally reduce icon size on hover if text is displayed */
max-width: 40%;
max-height: 40%;
}

.category-tab::before {
content: '';
position: absolute;
top: 0;
left: 0;
right: 0;
bottom: 0;
border-radius: inherit;
pointer-events: none;
/* Add a subtle inner shadow */
box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.1);
}

.category-tab:hover::before {
/* Slightly enhance the inner shadow on hover */
box-shadow: inset 0 3px 7px rgba(0, 0, 0, 0.2);
}

.category-tab svg {
/* Style for SVG icons if used */
width: 40px;
height: 40px;
}

.category-tab img {
/* Style for image icons if used */
max-width: 60%;
max-height: 60%;
}

.category-tab:active {
/* Subtle visual feedback when the tab is clicked */
transform: scale(0.95);
box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
}

.category-tab:first-child {
margin-left: 10px; /* Add some spacing to the first tab */
}

.category-tab:last-child {
/* Any specific styling for the last tab if needed */
}

.category-tab:nth-child(even) {
/* Styling for even numbered tabs if desired */
}

.category-tab:nth-child(odd) {
/* Styling for odd numbered tabs if desired */
}

.category-tab.motion-tab {
background-color: var(--motion-color);
}

.category-tab.triggering-tab {
background-color: var(--triggering-color);
}

.category-tab.looks-tab {
background-color: var(--looks-color);
}

.category-tab.sound-tab {
background-color: var(--sound-color);
}

.category-tab.control-tab {
background-color: var(--control-color);
}

.category-tab.end-tab {
background-color: var(--end-color);
}

.block-category {
display: none;
padding: 10px;
flex-grow: 1;
height: 100%;
border-right: 1px solid #e0e0e0;
margin-left: 0px; /* Remove margin-left to align with tabs /
background-color: #0D66CA; / blue background behind programming blocks /
overflow-y: auto; / Add scrollbar if needed */
}

.block-category.active {
display: flex;
flex-wrap: wrap;
padding: 10px;
background-color: #0D66CA; /* blue background behind programming blocks */
}

#programming-area {
background-color: #fff;
border: 1px solid #e0e0e0;
margin: 10px;
padding: 10px;
border-radius: 10px;
flex: 2; /* Increased to make programming area taller /
min-height: 200px; / Set minimum height */
}

.program-header {
display: flex;
justify-content: space-between;
align-items: center;
margin-bottom: 10px;
}

#clear-all {
color: #e74c3c;
cursor: pointer;
}

#program-blocks {
min-height: 180px; /* Increased height */
border: 1px dashed #ccc;
padding: 10px;
position: relative;
}

#program-blocks .block-container {
position: absolute;
}

.logo {
font-size: 20px;
font-weight: bold;
color: #4a90e2;
}

.header-icons {
display: flex;
}

.icon {
margin-left: 13px;
font-size: 24px;
color: #999;
cursor: pointer;
}

#block-palette .block-container,
#programming-area .block-container {
position: relative;
width: 100px;
height: 100px;
margin: 8px;
cursor: grab;
background-color: transparent;
}

#block-palette .scratch-block,
#programming-area .scratch-block {
position: relative;
width: 87px;
height: 80px;
background-color: #ffff00;
border-radius: 10px;
display: flex;
justify-content: center;
align-items: center;
color: black;
font-size: 24px;
font-weight: bold;
box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), inset 0 2px 4px rgba(0, 0, 0, 0.2);
transition: transform 0.2s ease-in-out, background-color 0.2s ease-in-out;
}

/* SVG Icon styling */
.block-svg-icon {
width: 40px;
height: 40px;
display: block;
margin: 0 auto;
}

#block-palette .scratch-block::after,
#programming-area .scratch-block::after {
content: '';
position: absolute;
right: -14px;
top: 50%;
transform: translateY(-50%);
width: 18px;
height: 18px;
background-color: inherit;
border-radius: 50%;
}

#block-palette .scratch-block::before,
#programming-area .scratch-block::before {
content: '';
position: absolute;
left: 0;
top: 50%;
transform: translateY(-50%);
width: 18px;
height: 18px;
background-color: #f0f4ff;
border-radius: 50%;
}

.block-icon {
width: 50px;
height: 50px;
display: flex;
justify-content: center;
align-items: center;
margin-right: 5px;
}

.block-icon svg {
width: 200%;
height: 200%;
}

.block-icon-img {
max-width: 60%;
max-height: 60%;
display: block;
margin: auto; /* Center the image */
}

#triggering-blocks .block-container .scratch-block {
background-color: var(--triggering-color);
}

#motion-blocks .block-container .scratch-block {
background-color: var(--motion-color);
}

#looks-blocks .block-container .scratch-block {
background-color: var(--looks-color);
}

#sound-blocks .block-container .scratch-block {
background-color: var(--sound-color);
}

#control-blocks .block-container .scratch-block {
background-color: var(--control-color);
}

#end-blocks .block-container .scratch-block {
background-color: var(--end-color);
}

#grid-toggle {
margin-left: 10px;
font-size: 16px;
color: #999;
cursor: pointer;
border: 1px solid #ccc;
padding: 5px 10px;
border-radius: 5px;
}

#grid-toggle:hover {
background-color: #f0f0f0;
}

/* תיקונים לצבעי הבלוקים בקטגוריה פעילה /
.block-category.active .scratch-block {
/ הסרת כל צבע סגול שעשוי להיות מוחל /
background-color: inherit; / חשוב לוודא שהצבע יורש מההגדרה של הבלוק */
}

/* וידוא שלכל קטגוריה יש את הצבע הנכון כשהיא פעילה */
#triggering-blocks.active .block-container .scratch-block {
background-color: var(--triggering-color);
}

#motion-blocks.active .block-container .scratch-block {
background-color: var(--motion-color);
}

#looks-blocks.active .block-container .scratch-block {
background-color: var(--looks-color);
}

#sound-blocks.active .block-container .scratch-block {
background-color: var(--sound-color);
}

#control-blocks.active .block-container .scratch-block {
background-color: var(--control-color);
}

#end-blocks.active .block-container .scratch-block {
background-color: var(--end-color);
}

/* סגנון מיוחד לבלוק Repeat /
#control-blocks .block-container,
#programming-area .block-container {
/ Existing styles */
}

#control-blocks .block-container.block-repeat,
#programming-area .block-container.block-repeat {
width: 140px; /* רוחב לבנה 140px /
height: 80px; / גובה לבנה 80px */
}

#control-blocks .block-container.block-repeat .scratch-block,
#programming-area .block-container.block-repeat .scratch-block {
width: 100%; /* Ensure scratch-block fills the container /
height: 100%;
border-radius: 30px 10px 10px 30px; / צורת "ח" - מעוגל יותר בצדדים שמאל וימין פחות /
padding-right: 10px; / קצת ריווח פנימי כדי שהטקסט לא יהיה צמוד לקצה /
padding-left: 10px;
text-align: center; / מרכוז טקסט אם יש /
font-size: 20px; / גודל גופן מתאים לרוחב החדש /
position: relative; / Required for the "hole" and circles positioning /
overflow: hidden; / Clip any overflowing content */
display: flex;
justify-content: center;
align-items: center;
}

/* הוספת החור לבלוק Repeat /
#control-blocks .block-container.block-repeat .scratch-block::after,
#programming-area .block-container.block-repeat .scratch-block::after {
content: '';
position: absolute;
top: 15px; / עדכון המיקום /
left: 50%;
transform: translateX(-50%);
width: 80px; / Width of the hole /
height: 65px; / Height of the hole /
background-color: #f0f4ff; / Match the background color /
border-radius: 0 0 10px 10px; / עיגול רק לפינות התחתונות של החור /
pointer-events: none; / Allow clicks to pass through /
z-index: 1; / Ensure the hole is above the block's content */
}

/* מיקום האייקון בפינה הימנית העליונה של בלוק Repeat /
#control-blocks .block-container.block-repeat .scratch-block .block-icon-img,
#programming-area .block-container.block-repeat .scratch-block .block-icon-img {
position: absolute; / כדי לאפשר מיקום פינתי /
top: 5px; / מרחק קטן מהקצה העליון /
right: 5px; / מרחק קטן מהקצה הימני /
max-width: 30%; / הקטנת האייקון אם צריך /
max-height: 30%;
z-index: 2; / Ensure the icon is above the hole */
}

/* הוספת חצאי עיגולים /
#control-blocks .block-container.block-repeat .semi-circle,
#programming-area .block-container.block-repeat .semi-circle {
position: absolute;
width: 20px;
height: 10px;
border-radius: 10px 10px 0 0; / חצי עיגול */
}

#control-blocks .block-container.block-repeat .semi-circle.red,
#programming-area .block-container.block-repeat .semi-circle.red {
background-color: red;
top: 0;
left: 10px;
}

#control-blocks .block-container.block-repeat .semi-circle.blue,
#programming-area .block-container.block-repeat .semi-circle.blue {
background-color: blue;
top: 0;
left: 40px;
}

#control-blocks .block-container.block-repeat .semi-circle.green,
#programming-area .block-container.block-repeat .semi-circle.green {
background-color: green;
top: 0;
right: 40px;
}

#control-blocks .block-container.block-repeat .semi-circle.yellow,
#programming-area .block-container.block-repeat .semi-circle.yellow {
background-color: yellow;
top: 0;
right: 10px;
}
